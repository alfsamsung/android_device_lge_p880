From fe618f9541aa86a9b573a10a2619a8d354d21000 Mon Sep 17 00:00:00 2001
From: alfsamsung <alfsamsung@hotmail.com>
Date: Sat, 1 Nov 2014 14:06:47 +0100
Subject: [PATCH] AbsListView: add option to disable scrolling cache (2/2)

---
 res/values/mahdi_arrays.xml                           | 14 ++++++++++++++
 res/values/mahdi_strings.xml                          |  8 ++++++++
 res/xml/performance_settings.xml                      |  7 +++++++
 .../settings/cyanogenmod/PerformanceSettings.java     | 19 +++++++++++++++++++
 4 files changed, 48 insertions(+)

diff --git a/res/values/mahdi_arrays.xml b/res/values/mahdi_arrays.xml
index 5b7dff9..0055d7a 100644
--- a/res/values/mahdi_arrays.xml
+++ b/res/values/mahdi_arrays.xml
@@ -2208,4 +2208,18 @@
         <item>@string/tinted_statusbar_navbar</item>
         <item>@string/tinted_statusbar_all</item>
     </string-array>
+
+    <string-array name="entries_scrollingcache" translatable="false">
+        <item>@string/pref_scrollingcache_force_enable</item>
+        <item>@string/pref_scrollingcache_default_enable</item>
+        <item>@string/pref_scrollingcache_default_disable</item>
+        <item>@string/pref_scrollingcache_force_disable</item>
+    </string-array>
+
+    <string-array name="values_scrollingcache" translatable="false">
+        <item>0</item>
+        <item>1</item>
+        <item>2</item>
+        <item>3</item>
+    </string-array>
 </resources>
diff --git a/res/values/mahdi_strings.xml b/res/values/mahdi_strings.xml
index b0a4a9f..b7c1403 100644
--- a/res/values/mahdi_strings.xml
+++ b/res/values/mahdi_strings.xml
@@ -2494,4 +2494,12 @@ two in order to insert additional control points. \'Remove\' deletes the selecte
     <string name="enable_quickboot_title">Enable QuickBoot mode</string>
     <!-- Summary of checkbox setting that enable quickboot. [CHAR LIMIT=64] -->
     <string name="enable_quickboot_summary">Put device into QuickBoot mode instead of normal power off.</string>
+
+    <!-- Performance Settings : Scrolling Cache -->
+    <string name="pref_scrollingcache_title">Scrolling cache</string>
+    <string name="pref_scrollingcache_summary">Scrolling cache may improve scrolling performance at the cost of memory</string>
+    <string name="pref_scrollingcache_force_enable">Force enable</string>
+    <string name="pref_scrollingcache_default_enable">Default enable</string>
+    <string name="pref_scrollingcache_default_disable">Default disable</string>
+    <string name="pref_scrollingcache_force_disable">Force disable</string>
 </resources>
diff --git a/res/xml/performance_settings.xml b/res/xml/performance_settings.xml
index f98f616..bf77562 100644
--- a/res/xml/performance_settings.xml
+++ b/res/xml/performance_settings.xml
@@ -65,6 +65,13 @@
             android:title="@string/pref_use_16bpp_alpha_title"
             android:summary="@string/pref_use_16bpp_alpha_summary" />
 
+        <ListPreference android:key="pref_scrollingcache"
+            android:dialogTitle="@string/pref_scrollingcache_title"
+            android:title="@string/pref_scrollingcache_title"
+            android:summary="@string/pref_scrollingcache_summary"
+            android:entries="@array/entries_scrollingcache"
+            android:entryValues="@array/values_scrollingcache" />
+
         <CheckBoxPreference
             android:key="pref_force_highend_gfx"
             android:title="@string/pref_force_highend_gfx_title"
diff --git a/src/com/android/settings/cyanogenmod/PerformanceSettings.java b/src/com/android/settings/cyanogenmod/PerformanceSettings.java
index 0867e38..11260a0 100644
--- a/src/com/android/settings/cyanogenmod/PerformanceSettings.java
+++ b/src/com/android/settings/cyanogenmod/PerformanceSettings.java
@@ -58,6 +58,12 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
 
     private static final String USE_16BPP_ALPHA_PROP = "persist.sys.use_16bpp_alpha";
 
+    private static final String SCROLLINGCACHE_PREF = "pref_scrollingcache";
+
+    private static final String SCROLLINGCACHE_PERSIST_PROP = "persist.sys.scrollingcache";
+
+    private static final String SCROLLINGCACHE_DEFAULT = "1";
+
     private static final String FORCE_HIGHEND_GFX_PREF = "pref_force_highend_gfx";
     private static final String FORCE_HIGHEND_GFX_PERSIST_PROP = "persist.sys.force_highendgfx";
 
@@ -74,6 +80,8 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
 
     private ContentObserver mPerformanceProfileObserver = null;
 
+    private ListPreference mScrollingCachePref;
+
     private AlertDialog alertDialog;
 
     private PowerManager mPowerManager;
@@ -126,6 +134,11 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
         String use16bppAlpha = SystemProperties.get(USE_16BPP_ALPHA_PROP, "0");
         mUse16bppAlphaPref.setChecked("1".equals(use16bppAlpha));
 
+        mScrollingCachePref = (ListPreference) prefSet.findPreference(SCROLLINGCACHE_PREF);
+        mScrollingCachePref.setValue(SystemProperties.get(SCROLLINGCACHE_PERSIST_PROP,
+                SystemProperties.get(SCROLLINGCACHE_PERSIST_PROP, SCROLLINGCACHE_DEFAULT)));
+        mScrollingCachePref.setOnPreferenceChangeListener(this);
+
         if (ActivityManager.isLowRamDeviceStatic()) {
             mForceHighEndGfx = (CheckBoxPreference) prefSet.findPreference(FORCE_HIGHEND_GFX_PREF);
             String forceHighendGfx = SystemProperties.get(FORCE_HIGHEND_GFX_PERSIST_PROP, "false");
@@ -201,6 +214,12 @@ public class PerformanceSettings extends SettingsPreferenceFragment implements
                 return true;
             }
         }
+        if (preference == mScrollingCachePref) {
+            if (newValue != null) {
+                SystemProperties.set(SCROLLINGCACHE_PERSIST_PROP, (String) newValue);
+                return true;
+            }
+        }
         return false;
     }
 
-- 
1.9.1

