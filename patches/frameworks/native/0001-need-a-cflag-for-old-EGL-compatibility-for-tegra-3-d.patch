From a0e59a64c5c8e16f733c6789ba2e05ccec769b84 Mon Sep 17 00:00:00 2001
From: alfsamsung <alfsamsung@hotmail.com>
Date: Sun, 21 Dec 2014 01:12:03 +0100
Subject: [PATCH] need a cflag for "old" EGL compatibility for tegra 3 device.

Michael Bestas originally worked on this here:
    http://review.cyanogenmod.org/#/c/54257/

    Here is Michael's description:

    From 4.1 to 4.2, the display subsystem was reworked to
    use SurfaceTextureClient/BufferQueue instead of
    FramebufferNativeWindow for the framebuffer itself.

    Unfortunately, some legacy EGL libraries make assumptions
    that any framebuffer device will be FramebufferNativeWindow.

    These EGL libraries will fail when used in 4.2 as if the
    framebuffer is not FramebufferNativeWindow, they will
    try to dequeue more than one buffer at a time, which
    will cause a hang of the graphics subsystem.

    This allows use of FramebufferNativeWindow to keep
    legacy EGL implementations happy.  Confirmed EGL
    implementations that need this include but are
    not limited to:

    Set BOARD_EGL_NEEDS_FNW to use

    Tegra2/3 ICS EGL
    Mali400 ICS EGL (Allwinner A10)
    Mali400 Jellybean (4.1) EGL (Samsung Exynos4)
    Adreno Jellybean (4.1) EGL (legacy qcom devices using PMEM)

    Original implementation by OndraOrg of XDA:
    http://forum.xda-developers.com/showpost.php?p=34469675&postcount=19

    Change-Id: I78dd6479e2cb2370efceb6840b2063808bc885f0
    Signed-off-by: Taylor Wagner <taylor.m.wagner@gmail.com>
---
 services/surfaceflinger/Android.mk        |  4 ++++
 services/surfaceflinger/DisplayDevice.cpp | 10 +++++++++-
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/services/surfaceflinger/Android.mk b/services/surfaceflinger/Android.mk
index 39cc4b4..f1eabf5 100644
--- a/services/surfaceflinger/Android.mk
+++ b/services/surfaceflinger/Android.mk
@@ -55,6 +55,10 @@ ifeq ($(TARGET_DISABLE_TRIPLE_BUFFERING),true)
 	LOCAL_CFLAGS += -DTARGET_DISABLE_TRIPLE_BUFFERING
 endif
 
+ifeq ($(BOARD_EGL_NEEDS_FNW),true)
+	LOCAL_CFLAGS += -DEGL_NEEDS_FNW
+endif
+
 ifneq ($(NUM_FRAMEBUFFER_SURFACE_BUFFERS),)
   LOCAL_CFLAGS += -DNUM_FRAMEBUFFER_SURFACE_BUFFERS=$(NUM_FRAMEBUFFER_SURFACE_BUFFERS)
 endif
diff --git a/services/surfaceflinger/DisplayDevice.cpp b/services/surfaceflinger/DisplayDevice.cpp
index 76ab552..0e32ee9 100644
--- a/services/surfaceflinger/DisplayDevice.cpp
+++ b/services/surfaceflinger/DisplayDevice.cpp
@@ -29,6 +29,10 @@
 
 #include <gui/Surface.h>
 
+#ifdef EGL_NEEDS_FNW
+#include <ui/FramebufferNativeWindow.h>
+#endif
+
 #include <hardware/gralloc.h>
 
 #include "DisplayHardware/DisplaySurface.h"
@@ -78,8 +82,12 @@ DisplayDevice::DisplayDevice(
       mActiveConfig(0)
 {
     mNativeWindow = new Surface(producer, false);
+#ifndef EGL_NEEDS_FNW
     ANativeWindow* const window = mNativeWindow.get();
-
+#else
+    ANativeWindow* const window = new FramebufferNativeWindow();
+#endif
+    
     /*
      * Create our display's surface
      */
-- 
1.9.1

