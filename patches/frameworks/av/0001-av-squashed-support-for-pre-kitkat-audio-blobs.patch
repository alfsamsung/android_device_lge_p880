From 6477dea1bae6cc19fd69381c5bace4b4fd772ef4 Mon Sep 17 00:00:00 2001
From: c457 <android.c357@gmail.com>
Date: Tue, 5 Jan 2016 21:06:56 -0600
Subject: [PATCH] av: squashed support for pre-kitkat audio blobs

commit 40c41a743a4345ad26b6eab41755c5b474f75853
Author: chrmhoffmann <chrmhoffmann@gmail.com>
Date:   Sat Nov 29 19:32:27 2014 +0100

    pre kitkat audio legacy policy fix for hotword (ok google)

    Change-Id: I5bb90fb90f373461a98609226a5cea50ac5266e9

commit d47b306954b96142323c79b976edeb3eaa3b46dd
Author: chrmhoffmann <chrmhoffmann@gmail.com>
Date:   Sun Nov 23 18:22:35 2014 +0100
commit d47b306954b96142323c79b976edeb3eaa3b46dd
Author: chrmhoffmann <chrmhoffmann@gmail.com>
Date:   Sun Nov 23 18:22:35 2014 +0100

    pre-kitkat audio policy blobs re-activated.

    Change-Id: Idfcb03d0a4aa0a099bf5a17b7bf592ab402e3255

commit 9778ef3ae0520709acbcfd23bcf99e894b278322
Author: Thomas Wendt <thoemy@gmx.net>
Date:   Fri Jan 17 18:03:46 2014 +0100

    libnbaio: Don't call get_presentation_position for pre KitKat blobs

    This fixes a crash with the HTC Tegra3 audio blob where
    mStream->get_presentation_position is not NULL but pointing to a unknown
    position in memory.

    Change-Id: I74855a4c3123a520379a54310d8674e381357e8b

Change-Id: Iae65c6ccb6dcb120a6fc20978b8a69e6af39a51a
---
 include/media/nbaio/AudioStreamOutSink.h                   |  2 ++
 media/libnbaio/Android.mk                                  |  4 ++++
 media/libnbaio/AudioStreamOutSink.cpp                      |  2 ++
 services/audiopolicy/Android.mk                            |  4 ++++
 .../audiopolicy/service/AudioPolicyClientImplLegacy.cpp    |  5 +++++
 .../audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp | 14 ++++++++++++++
 6 files changed, 31 insertions(+)

diff --git a/include/media/nbaio/AudioStreamOutSink.h b/include/media/nbaio/AudioStreamOutSink.h
index 9949b88..b78c4e4 100644
--- a/include/media/nbaio/AudioStreamOutSink.h
+++ b/include/media/nbaio/AudioStreamOutSink.h
@@ -52,7 +52,9 @@ public:
     // implementation of GNWT (if any)
     virtual status_t getNextWriteTimestamp(int64_t *timestamp);
 
+#ifndef HAVE_PRE_KITKAT_AUDIO_BLOB
     virtual status_t getTimestamp(AudioTimestamp& timestamp);
+#endif
 
     // NBAIO_Sink end
 
diff --git a/media/libnbaio/Android.mk b/media/libnbaio/Android.mk
index 1353f28..43030d9 100644
--- a/media/libnbaio/Android.mk
+++ b/media/libnbaio/Android.mk
@@ -35,4 +35,8 @@ LOCAL_SHARED_LIBRARIES := \
 
 LOCAL_C_INCLUDES := $(call include-path-for, audio-utils)
 
+ifeq ($(BOARD_HAVE_PRE_KITKAT_AUDIO_BLOB),true)
+    LOCAL_CFLAGS += -DHAVE_PRE_KITKAT_AUDIO_BLOB
+endif
+
 include $(BUILD_SHARED_LIBRARY)
diff --git a/media/libnbaio/AudioStreamOutSink.cpp b/media/libnbaio/AudioStreamOutSink.cpp
index 0d5f935..dc54887 100644
--- a/media/libnbaio/AudioStreamOutSink.cpp
+++ b/media/libnbaio/AudioStreamOutSink.cpp
@@ -78,6 +78,7 @@ status_t AudioStreamOutSink::getNextWriteTimestamp(int64_t *timestamp) {
     return mStream->get_next_write_timestamp(mStream, timestamp);
 }
 
+#ifndef HAVE_PRE_KITKAT_AUDIO_BLOB
 status_t AudioStreamOutSink::getTimestamp(AudioTimestamp& timestamp)
 {
     if (mStream->get_presentation_position == NULL) {
@@ -92,5 +93,6 @@ status_t AudioStreamOutSink::getTimestamp(AudioTimestamp& timestamp)
     timestamp.mPosition = position64;
     return OK;
 }
+#endif
 
 }   // namespace android
diff --git a/services/audiopolicy/Android.mk b/services/audiopolicy/Android.mk
index 5b38e1c..69fc0e8 100644
--- a/services/audiopolicy/Android.mk
+++ b/services/audiopolicy/Android.mk
@@ -40,6 +40,10 @@ LOCAL_SHARED_LIBRARIES += \
     libaudiopolicymanager
 endif
 
+ifeq ($(BOARD_HAVE_PRE_KITKAT_AUDIO_POLICY_BLOB),true)
+    LOCAL_CFLAGS += -DHAVE_PRE_KITKAT_AUDIO_POLICY_BLOB
+endif
+
 LOCAL_STATIC_LIBRARIES := \
     libmedia_helper \
     libaudiopolicycomponents
diff --git a/services/audiopolicy/service/AudioPolicyClientImplLegacy.cpp b/services/audiopolicy/service/AudioPolicyClientImplLegacy.cpp
index a79f8ae..36c85f1 100644
--- a/services/audiopolicy/service/AudioPolicyClientImplLegacy.cpp
+++ b/services/audiopolicy/service/AudioPolicyClientImplLegacy.cpp
@@ -125,8 +125,13 @@ audio_io_handle_t aps_open_output_on_module(void *service __unused,
                                                    audio_output_flags_t flags,
                                                    const audio_offload_info_t *offloadInfo)
 {
+#ifdef HAVE_PRE_KITKAT_AUDIO_POLICY_BLOB
+    return open_output(module, pDevices, pSamplingRate, pFormat, pChannelMask,
+                          pLatencyMs, flags, NULL);
+#else
     return open_output(module, pDevices, pSamplingRate, pFormat, pChannelMask,
                           pLatencyMs, flags, offloadInfo);
+#endif
 }
 
 audio_io_handle_t aps_open_dup_output(void *service __unused,
diff --git a/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp b/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp
index f76b5c8..5f6cb72 100644
--- a/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp
+++ b/services/audiopolicy/service/AudioPolicyInterfaceImplLegacy.cpp
@@ -275,6 +275,11 @@ status_t AudioPolicyService::getInputForAttr(const audio_attributes_t *attr,
         return BAD_VALUE;
     }
 
+#ifdef HAVE_PRE_KITKAT_AUDIO_POLICY_BLOB
+    if (inputSource == AUDIO_SOURCE_HOTWORD)
+      inputSource = AUDIO_SOURCE_VOICE_RECOGNITION;
+#endif
+
     sp<AudioPolicyEffects>audioPolicyEffects;
     {
         Mutex::Autolock _l(mLock);
@@ -499,6 +504,12 @@ bool AudioPolicyService::isSourceActive(audio_source_t source) const
         return false;
     }
     Mutex::Autolock _l(mLock);
+
+#ifdef HAVE_PRE_KITKAT_AUDIO_POLICY_BLOB
+    if (source == AUDIO_SOURCE_HOTWORD)
+      source = AUDIO_SOURCE_VOICE_RECOGNITION;
+#endif
+
     return mpAudioPolicy->is_source_active(mpAudioPolicy, source);
 }
 
@@ -524,6 +535,9 @@ status_t AudioPolicyService::queryDefaultPreProcessing(int audioSession,
 
 bool AudioPolicyService::isOffloadSupported(const audio_offload_info_t& info)
 {
+#if HAVE_PRE_KITKAT_AUDIO_POLICY_BLOB
+    return false;
+#endif
     if (mpAudioPolicy == NULL) {
         ALOGV("mpAudioPolicy == NULL");
         return false;
-- 
1.9.1

