From 29d0259c83a82af8e266d3eeffdff1db5a3ebd57 Mon Sep 17 00:00:00 2001
From: Steve Kondik <shade@chemlab.org>
Date: Mon, 14 Apr 2014 15:30:16 -0700
Subject: [PATCH] audio: Unhide PCM offload enums

Change-Id: Iab074ae64d293781769032cc902e72a93374679f
---
 include/system/audio.h | 23 ++++++++++-------------
 1 file changed, 10 insertions(+), 13 deletions(-)

diff --git a/include/system/audio.h b/include/system/audio.h
index e25f933..c2819d7 100644
--- a/include/system/audio.h
+++ b/include/system/audio.h
@@ -125,9 +125,7 @@ typedef enum {
     AUDIO_FORMAT_PCM_SUB_8_BIT           = 0x2, /* DO NOT CHANGE - PCM unsigned 8 bits */
     AUDIO_FORMAT_PCM_SUB_32_BIT          = 0x3, /* PCM signed .31 fixed point */
     AUDIO_FORMAT_PCM_SUB_8_24_BIT        = 0x4, /* PCM signed 7.24 fixed point */
-#ifdef QCOM_HARDWARE
     AUDIO_FORMAT_PCM_SUB_24_BIT          = 0x5, /* PCM signed 24 fixed point */
-#endif
 } audio_format_pcm_sub_fmt_t;
 
 /* MP3 sub format field definition : can use 11 LSBs in the same way as MP3
@@ -199,9 +197,9 @@ typedef enum {
     AUDIO_FORMAT_AMR_WB_PLUS         = 0x14000000UL,
     AUDIO_FORMAT_MP2                 = 0x15000000UL,
     AUDIO_FORMAT_EVRCNW              = 0x16000000UL,
-    AUDIO_FORMAT_PCM_OFFLOAD         = 0x17000000UL,
     AUDIO_FORMAT_FLAC                = 0x18000000UL,
 #endif
+    AUDIO_FORMAT_PCM_OFFLOAD         = 0x17000000UL,
     AUDIO_FORMAT_MAIN_MASK           = 0xFF000000UL,
     AUDIO_FORMAT_SUB_MASK            = 0x00FFFFFFUL,
 
@@ -214,20 +212,19 @@ typedef enum {
                                         AUDIO_FORMAT_PCM_SUB_32_BIT),
     AUDIO_FORMAT_PCM_8_24_BIT        = (AUDIO_FORMAT_PCM |
                                         AUDIO_FORMAT_PCM_SUB_8_24_BIT),
-#ifdef QCOM_HARDWARE
     AUDIO_FORMAT_PCM_24_BIT          = (AUDIO_FORMAT_PCM |
                                           AUDIO_FORMAT_PCM_SUB_24_BIT),
+#ifdef QCOM_HARDWARE
     AUDIO_FORMAT_AC3_DM              =  (AUDIO_FORMAT_AC3 |
                                           AUDIO_FORMAT_DOLBY_SUB_DM),
     AUDIO_FORMAT_EAC3_DM             =  (AUDIO_FORMAT_EAC3 |
                                           AUDIO_FORMAT_DOLBY_SUB_DM),
-
+#endif
     /*Offload PCM formats*/
     AUDIO_FORMAT_PCM_16_BIT_OFFLOAD  = (AUDIO_FORMAT_PCM_OFFLOAD |
                                         AUDIO_FORMAT_PCM_SUB_16_BIT),
     AUDIO_FORMAT_PCM_24_BIT_OFFLOAD  = (AUDIO_FORMAT_PCM_OFFLOAD |
                                         AUDIO_FORMAT_PCM_SUB_8_24_BIT),
-#endif
 } audio_format_t;
 
 enum {
@@ -760,6 +757,12 @@ static inline bool audio_is_valid_format(audio_format_t format)
     case AUDIO_FORMAT_HE_AAC_V2:
     case AUDIO_FORMAT_VORBIS:
         return true;
+    case AUDIO_FORMAT_PCM_OFFLOAD:
+        if (format != AUDIO_FORMAT_PCM_16_BIT_OFFLOAD &&
+                format != AUDIO_FORMAT_PCM_24_BIT_OFFLOAD) {
+            return false;
+        }
+        return true;
 #ifdef QCOM_HARDWARE
     case AUDIO_FORMAT_QCELP:
     case AUDIO_FORMAT_EVRC:
@@ -777,12 +780,6 @@ static inline bool audio_is_valid_format(audio_format_t format)
     case AUDIO_FORMAT_EVRCNW:
     case AUDIO_FORMAT_FLAC:
         return true;
-    case AUDIO_FORMAT_PCM_OFFLOAD:
-        if (format != AUDIO_FORMAT_PCM_16_BIT_OFFLOAD &&
-                format != AUDIO_FORMAT_PCM_24_BIT_OFFLOAD) {
-            return false;
-        }
-        return true;
 #endif
     default:
         return false;
@@ -794,12 +791,12 @@ static inline bool audio_is_linear_pcm(audio_format_t format)
     return ((format & AUDIO_FORMAT_MAIN_MASK) == AUDIO_FORMAT_PCM);
 }
 
-#ifdef QCOM_HARDWARE
 static inline bool audio_is_offload_pcm(audio_format_t format)
 {
     return ((format & AUDIO_FORMAT_MAIN_MASK) == AUDIO_FORMAT_PCM_OFFLOAD);
 }
 
+#ifdef QCOM_HARDWARE
 static inline bool audio_is_supported_compressed(audio_format_t format)
 {
     if (format == AUDIO_FORMAT_AMR_NB ||
-- 
1.9.1

